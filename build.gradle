buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url = "https://lss233.littleservice.cn/repositories/minecraft" }
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
repositories {
	mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public' }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.0"
group = "cn.hyrkg.pixelgame.core" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PixelCoreMod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile fileTree(dir:'lib',includes:['*jar'])
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    // 设置输出的 JAR 文件名称和版本
    baseName = 'PixelCoreMod'
    version = project.version

    // 把项目的类文件和资源文件打包进 JAR
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    // 包含 lib 文件夹中的所有依赖
    from {
        fileTree(dir: 'lib', include: '*.jar').collect { zipTree(it) }
    }

    // 防止重复文件引发冲突
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile){
  options.encoding = "UTF-8"
}
